import com.paltabrain.Dependencies

plugins {
    id 'com.android.library'
    id 'org.jetbrains.kotlin.android'
    id 'maven-publish'
    id 'io.gitlab.arturbosch.detekt'
}

detekt {
    config = files(file(getRootDir().path + "/config/detekt/detekt.yml"))
    buildUponDefaultConfig = true
}

version = "1.0.0-SNAPSHOT"

android {
    compileSdk Dependencies.Build.compileSdk

    defaultConfig {
        minSdk Dependencies.Build.minSdk
        targetSdk Dependencies.Build.targetSdk

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {
    api("com.paltabrain.core:logger:1.0.0-SNAPSHOT")
}

afterEvaluate {
    publishing {

        repositories {
            maven {

                url = version.endsWith('SNAPSHOT') ? SNAPSHOT_REPOSITORY_URL : RELEASE_REPOSITORY_URL
                credentials {
                    username = getRepositoryUsername()
                    password = getRepositoryPassword()
                }
            }
        }

        publications {
            release(MavenPublication) {
                pom {
                    name = project.name
                    description = POM_DESCRIPTION
                    url = POM_URL

                    licenses {
                        license {
                            name = POM_LICENCE_NAME
                            url = POM_LICENCE_URL
                        }
                    }

                    scm {
                        url = POM_SCM_URL
                        connection = POM_SCM_CONNECTION
                        developerConnection = POM_SCM_DEV_CONNECTION
                    }
                }

                groupId = 'com.paltabrain.core'
                artifactId = 'logger.android'
                version = getLibraryVersion()

                from components.release
            }
        }
    }
}

def getLibraryVersion() {
    return version
}

def getRepositoryUsername() {
    return hasProperty('sonatypeUsername') ? sonatypeUsername : ""
}

def getRepositoryPassword() {
    return hasProperty('sonatypePassword') ? sonatypePassword : ""
}
